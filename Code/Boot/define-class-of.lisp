(cl:in-package #:sicl-boot)

(defun define-class-of (ea)
  (setf (sicl-genv:fdefinition 'class-of ea)
        (lambda (object)
          (let ((result (cond ((typep object 'sicl-boot::header)
                               (slot-value object 'sicl-boot::%class))
                              ((consp object)
                               (sicl-genv:find-class 'cons ea))
                              ((null object)
                               (sicl-genv:find-class 'null ea))
                              ((symbolp object)
                               (sicl-genv:find-class 'symbol ea))
                              ((integerp object)
                               (sicl-genv:find-class 'fixnum ea))
                              ((streamp object)
                               (sicl-genv:find-class 't ea))
                              (t
                               (class-of object)))))
            result))))
